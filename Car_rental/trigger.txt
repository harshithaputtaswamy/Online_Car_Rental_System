
CREATE PROCEDURE update_avail(reg varchar(50), confirmation int)
UPDATE car 
SET availability=IF(confirmation=0,1,0)
WHERE car.id=reg;

create trigger on_order_placed
AFTER UPDATE
ON booking
FOR EACH ROW
CALL update_avail(NEW.reg_num_id, NEW.confirm);









call calculate_late_fee_and_tax("2017-06-25 09:34:21", "2017-06-15 15:25:35",1,7000,@latefee,@tax);/









// stored procedure for calculating tax amount and late fee //

DELIMITER /
drop procedure calculate_late_fee_and_tax;
CREATE PROCEDURE CALCULATE_LATE_FEE_AND_TAX
(IN actualReturnDateTime DATETIME, IN returnDateTime DATETIME, IN regNum INT, IN amount INT,
OUT totalLateFee INT,
OUT totalTax INT) 

BEGIN
DECLARE lateFeePerHour INT;
DECLARE hourDifference INT;
DECLARE car_avail INT;
 SELECT late_fee INTO lateFeePerHour
 FROM category CC INNER JOIN CAR C ON CC.id =
 C.category_id WHERE C.id = regNum;

UPDATE car 
SET availability=1
WHERE car.id=regNum;

 IF actualReturnDateTime > returnDateTime THEN
 SET hourDifference = (Datediff(actualReturnDateTime, returnDateTime))*(24);
 SET totalLateFee = hourDifference * lateFeePerHour;
 ELSE
 SET totalLateFee = 0;
 END IF;
 SET totalTax = (amount + totalLateFee)*0.0825;
 
END;
/



DELIMITER /
DROP TRIGGER GENERATE_BILLING;
CREATE TRIGGER GENERATE_BILLING
AFTER UPDATE ON booking
FOR EACH ROW
BEGIN
DECLARE LastBillId INT;
DECLARE newBillId INT;
DECLARE totalLateFee INT;
DECLARE totalTax INT;
DECLARE totalAmount INT;
IF NEW.act_ret_date IS NOT NULL AND NEW.status=1 THEN

 SELECT id INTO lastBillId FROM ( SELECT id, id AS
 RN FROM billing)AS bill
 WHERE RN= (SELECT MAX(id) FROM billing);

 SET newBillId = lastBillId+1;

 CALL CALCULATE_LATE_FEE_AND_TAX(NEW.act_ret_date, NEW.ret_date,
 NEW.reg_num_id,NEW.amt, @totalLateFee, @totalTax);

SET totalAmount= NEW.amt + @totalLateFee + @totalTax;
 INSERT INTO billing (id,bill_date,bill_status,total_amount,tax_amount,booking_id_id,late_fee)
 VALUES (newBillId,curdate(),1,totalAmount,@totalTax,NEW.id,@totalLateFee);
END IF;
END;
/















